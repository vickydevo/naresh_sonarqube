pipeline{
    agent none
	environment {
		registry = 'naresh240/springboothello:latest'
		registryCredentials = 'docker_credentials'
		dockerImage = ''
	}    
    stages {
        stage('git checkout'){
            agent any
            steps{
                git branch: 'main',
                url: 'https://github.com/Naresh240/sonarqube.git'
            }
        }
        stage('Example Build') {
            agent { docker 'maven:3-alpine' } 
            steps {
                dir('springboot'){
                    echo 'Hello, Maven'
                    sh 'mvn clean install'
                }
            }
        }
        stage("Deploy to Sonar") {
            agent any
            steps{
                dir('springboot'){ 
                    withSonarQubeEnv(installationName: 'sonarqube', credentialsId: 'sonar-token') {
                        sh "${ tool ("sonar-scanner")}/sonar-scanner -Dsonar.projectKey=hellospringboot -Dsonar.projectName=hellospringboot -Dsonar.sourceEncoding=UTF-8 -Dsonar.sources=src"
                    }
                }
            }
        }
        stage ('Build Docker Image') {
            agent any
            steps {
                dir('springboot'){                
                    script {
                        dockerImage = docker.build registry
                    }
                }
            }
        }
        stage ('Docker Push') {
            agent any
            steps {
                script {
                    docker.withRegistry('',registryCredentials) {
                        dockerImage.push()
                    }
                }
            }
        }        
    }
}
